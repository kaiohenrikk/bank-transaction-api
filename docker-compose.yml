version: '3.8'

services:
  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/loki-config.yaml
      - loki-data:/loki/data
    networks:
      - my-network 

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000" 
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  
    depends_on:
      - loki  
    networks:
      - my-network 

  app:
    build: .
    ports:
      - "3000:3000" 
    environment:
      - NODE_ENV=production
      - POSTGRES_USER=banktransactionuser
      - POSTGRES_PASSWORD=banktransactionpassword
      - POSTGRES_DB=prod_banking_system
      - POSTGRES_HOST=db 
    depends_on:
      - loki  
      - db  
    volumes:
      - ./swagger.json:/usr/src/app/swagger.json 
    command: sh -c "until nc -z db 5432; do echo waiting for db; sleep 2; done; npm start"
    networks:
      - my-network 

  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - "8080:8080" 
    environment:
      - SWAGGER_JSON=/usr/share/swagger-ui/swagger.json
    volumes:
      - ./swagger.json:/usr/share/swagger-ui/swagger.json 
    networks:
      - my-network  

  db: 
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: banktransactionuser  
      POSTGRES_PASSWORD: banktransactionpassword  
      POSTGRES_DB: prod_banking_system  
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data 
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U banktransactionuser -d prod_banking_system"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - my-network  

volumes:
  loki-data:
  pg_data:

networks:
  my-network:  
